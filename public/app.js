angular.module("LMSApp",["ui.router"]).config(["$stateProvider","$urlRouterProvider","$locationProvider",function(e,t,o){t.otherwise("/login"),e.state("login",{url:"/login",templateUrl:"src/login/login.html"}).state("overview",{url:"/overview",templateUrl:"src/login/overview.html"}).state("courses",{url:"/courses",templateUrl:"src/course/courses.html"}).state("quizes",{url:"/quizes",templateUrl:"src/quiz/quizes.html"}),o.html5Mode(!0)}]).run(["$rootScope",function(e){e.$on("$stateChangeStart",function(t,o,r){o.requireLogin&&"undefined"==typeof e.currentUser&&(t.preventDefault(),$state.go("login"))})}]),angular.module("LMSApp").controller("CourseController",["$scope","courseService",function(e,t){e.newCourse={title:"",department:"",number:"",instructor:""},e.addCourse=function(){console.log(e.newCourse)};var o=function(){t.fetch(function(t){e.courses=t,e.instructors=[{id:1,firstname:"Yuraima",lastname:"Estevez"},{id:2,firstname:"Eric",lastname:"Bishop"},{id:3,firstname:"Fazil",lastname:"Haroon"}]})};o()}]),angular.module("LMSApp").factory("courseService",["$http",function(e){var t="http://127.0.0.1:3000/api/course",o=function(o){e.get(t).then(function(e){return o(e.data.data)},function(e){console.log(e)})};return{fetch:o}}]),angular.module("LMSApp").controller("LoginController",["$scope","$location",function(e,t){e.emailPattern=/^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/i,e.user={},e.validate=function(){console.log("hello"),t.path("/")}}]);
//# sourceMappingURL=data:application/json;base64,
